{
  "parsedContent": {
    "content": "# Cross-Platform Shell Syntax Reference\n\n**CONTEXT-AWARE COMMANDS**: Always check environment_info for current OS and shell!\n\n## Current Environment Detection\nThe AI assistant should always check the `environment_info` section to determine:\n- Current OS (Windows/Mac/Linux)\n- Default shell (PowerShell/bash/zsh/etc.)\n- Use appropriate syntax for the detected environment\n\n## Command Chaining by Platform\n\n### Windows PowerShell\n```powershell\n# Sequential execution\ncommand1; command2; command3\n\n# Conditional execution\ncommand1 -and command2 -and command3\n```\n\n### Mac/Linux (bash/zsh)\n```bash\n# Sequential execution\ncommand1; command2; command3\n\n# Conditional execution\ncommand1 && command2 && command3\n```\n\n### ❌ WRONG: Mixing Syntaxes\n```bash\n# DON'T use bash syntax on Windows\ncommand1 && command2  # Wrong on PowerShell\n\n# DON'T use PowerShell syntax on Mac/Linux\ncommand1 -and command2  # Wrong on bash/zsh\n```\n\n## Common PowerShell Patterns\n\n### Process Management\n```powershell\n# Kill processes by name\ntaskkill /f /im node.exe\n\n# Kill specific processes with filtering\nGet-Process | Where-Object {$_.ProcessName -like \"*node*\"} | Stop-Process -Force\n```\n\n### File Operations\n```powershell\n# Remove files/folders\nRemove-Item \"path\\to\\file\" -Force\nRemove-Item \"path\\to\\folder\\*\" -Force -Recurse\n\n# Create directories\nNew-Item -ItemType Directory -Path \"path\\to\\folder\" -Force\n```\n\n### Network/Port Checking\n```powershell\n# Check ports\nnetstat -ano | findstr :3000\n\n# Test network connectivity\nTest-NetConnection -ComputerName localhost -Port 3000\n```\n\n### Environment Variables\n```powershell\n# Access environment variables\n$env:APPDATA\n$env:PATH\n\n# Set environment variables\n$env:NODE_ENV = \"development\"\n```\n\n## Reminder for AI Assistant\n**ALWAYS CHECK ENVIRONMENT_INFO FIRST!**\n\nCurrent session info will show:\n- OS: Windows/Mac/Linux  \n- Shell: PowerShell/bash/zsh/etc.\n\n### Decision Logic:\n- **Windows + PowerShell**: Use `;` and `-and`, PowerShell cmdlets\n- **Mac/Linux + bash/zsh**: Use `;` and `&&`, Unix commands\n- **When in doubt**: Ask user to confirm their current environment\n\n### Cross-Platform Commands\nSome commands work the same everywhere:\n- `node server.js`\n- `npm install`\n- `git status`\n\nOthers need platform-specific versions:\n- Process killing: `taskkill` (Windows) vs `pkill` (Mac/Linux)\n- Path separators: `\\` (Windows) vs `/` (Mac/Linux)\n- Environment variables: `$env:VAR` (PowerShell) vs `$VAR` (bash)\n",
    "type": "md",
    "originalPath": "docs\\Legacy\\ai-instructions\\SHELL_SYNTAX_REFERENCE.md",
    "metadata": {
      "type": "md",
      "originalPath": "docs\\Legacy\\ai-instructions\\SHELL_SYNTAX_REFERENCE.md",
      "size": 2438,
      "lastModified": "2025-06-12T23:04:38.176Z",
      "lines": 102,
      "encoding": "utf-8"
    }
  },
  "chunks": [
    {
      "content": "# Cross-Platform Shell Syntax Reference\n\n**CONTEXT-AWARE COMMANDS**: Always check environment_info for current OS and shell!\n\n## Current Environment Detection\nThe AI assistant should always check the `environment_info` section to determine:\n- Current OS (Windows/Mac/Linux)\n- Default shell (PowerShell/bash/zsh/etc.)\n- Use appropriate syntax for the detected environment\n\n## Command Chaining by Platform\n\n### Windows PowerShell\n```powershell\n# Sequential execution\ncommand1; command2; command3\n\n# Conditional execution\ncommand1 -and command2 -and command3\n```\n\n### Mac/Linux (bash/zsh)\n```bash\n# Sequential execution\ncommand1; command2; command3\n\n# Conditional execution\ncommand1 && command2 && command3\n```\n\n### ❌ WRONG: Mixing Syntaxes\n```bash\n# DON'T use bash syntax on Windows\ncommand1 && command2  # Wrong on PowerShell\n\n# DON'T use PowerShell syntax on Mac/Linux\ncommand1 -and command2  # Wrong on bash/zsh\n```\n\n## Common PowerShell Patterns\n\n### Process Management\n```powershell\n# Kill processes by name\ntaskkill /f /im node.exe\n\n# Kill specific processes with filtering\nGet-Process | Where-Object {$_.ProcessName -like \"*node*\"} | Stop-Process -Force\n```\n\n### File Operations\n```powershell\n# Remove files/folders\nRemove-Item \"path\\to\\file\" -Force\nRemove-Item \"path\\to\\folder\\*\" -Force -Recurse\n\n# Create directories\nNew-Item -ItemType Directory -Path \"path\\to\\folder\" -Force\n```\n\n### Network/Port Checking\n```powershell\n# Check ports\nnetstat -ano | findstr :3000\n\n# Test network connectivity\nTest-NetConnection -ComputerName localhost -Port 3000\n```\n\n### Environment Variables\n```powershell\n# Access environment variables\n$env:APPDATA\n$env:PATH\n\n# Set environment variables\n$env:NODE_ENV = \"development\"\n```\n\n## Reminder for AI Assistant\n**ALWAYS CHECK ENVIRONMENT_INFO FIRST!**\n\nCurrent session info will show:\n- OS: Windows/Mac/Linux  \n- Shell: PowerShell/bash/zsh/etc.\n\n### Decision Logic:\n- **Windows + PowerShell**: Use `;` and `-and`, PowerShell cmdlets\n- **Mac/Linux + bash/zsh**: Use `;` and `&&`, Unix commands\n- **When in doubt**: Ask user to confirm their current environment\n\n### Cross-Platform Commands\nSome commands work the same everywhere:\n- `node server.js`\n- `npm install`\n- `git status`\n\nOthers need platform-specific versions:\n- Process killing: `taskkill` (Windows) vs `pkill` (Mac/Linux)\n- Path separators: `\\` (Windows) vs `/` (Mac/Linux)\n- Environment variables: `$env:VAR` (PowerShell) vs `$VAR` (bash)",
      "startPosition": 0,
      "endPosition": 2435,
      "tokenCount": 418,
      "chunkIndex": 0,
      "metadata": {
        "sourceFile": "docs\\Legacy\\ai-instructions\\SHELL_SYNTAX_REFERENCE.md",
        "sourceType": "md",
        "totalChunks": 1,
        "hasOverlap": false,
        "originalMetadata": {
          "type": "md",
          "originalPath": "docs\\Legacy\\ai-instructions\\SHELL_SYNTAX_REFERENCE.md",
          "size": 2438,
          "lastModified": "2025-06-12T23:04:38.176Z",
          "lines": 102,
          "encoding": "utf-8"
        }
      }
    }
  ],
  "processedAt": "2025-06-18T20:41:34.923Z"
}